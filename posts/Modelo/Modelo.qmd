---
title: "Hacer modelos en GEE"
format: html
---



# Modelos en GEE

Google Earth Engine (GEE) es una herramienta muy útil, dentro de la cuál se pueden generar modelos matemáticos para las distintas problemáticas que se deseen visualizar dentro de GEE. Sin embargo, el desarrollo no se debe limitar al uso exclusivo de GEE pues esto nos restringiría al uso de otras herramientas desarrolladas por distintos individuos o grupos de trabajo. Bajo esta primicia, en este pequeño tutorial vamos a mostrar como se podemos exportar un modelo creado en otras plataformas y poder exportarlo a GEE. 

En este sentido vamos a usar la plataforma GEE para exportar modelos y poder hacer la visualización de los resultados en GEE. 




# Bases 

Un modelo implica en términos muy simples implica poder describir como se comporta algo en lo cual estamos interesados y encontrar las causas que lo explican. Hay muchos tipos de modelos desde los  muy complejos hasta los modelos muy simple, pero una forma de ver los es simplemente como funciones,  

$$
y =  f(x_1, x_2, \dots , x_n )
$$

Donde $\{ x_i \}$ normalmente los llamamos variables explicativas  y a $y$ la variable descriptiva. Y $f $ es nuestro modelo, un modelo simple puede ser la combinación lineal de los elementos

$$
f(x_1, x_2, \dots , x_n ) = \alpha_1 x_1 + \alpha_2 x_2 + \dots  + \alpha_n x_n 
$$

o complejo  

$$
f(x_1, x_2, \dots , x_n ) = \alpha_{1,1}  x_1 + \alpha_{1,2}  x_1^2 + \dots + \alpha_{1 ,{\psi(x_1)}}  x_1^{\psi(x_1)}  + \dots 
+ \alpha_{n ,{\psi(x_n)}} x_n ^{\psi(x_n)}   
$$

donde $\psi(x_n)$ es una función que determina hasta que potencia se eleva a la variable $x_i$. 

En estos casos determinar un modelo implicaría encontrar la variables ($\{ x_i \}$) que se consideran que mejor explican a la variable $y$ y encontrar $\psi(x_i)$. Haciendo uso de los datos propios de cada problemática ajustar el modelo implica poder encontrar las $\{\alpha_{i,j}\}$. 


GEE tiene herramientas para poder hacer modelos sin embargo, los modelos dentro de GEE puede que no se ajusten a las problemáticas que se desean analizar o no se tienen las herramientas disponibles para generar modelos más complejos dentro de GEE. Por tal motivo, podemos obtener un modelo fuera de GEE y si se tiene una expresión como las descritas anteriormente es posible generar las predicciones dentro de GEE para su visualización.


En este ejemplo vamos a obtener el contaminante *particle matter* de menos de $2.5 \mu$ (**PM 2.5**) para la zona metropolitana del valle de México. Para tal motivo vamos a utilizar los datos que se encuentran dentro de GEE, en este caso vamos a utilizar la colección de imágenes **'MODIS/006/MCD19A2_GRANULES'** la cual contiene el resultado de algoritmo *Multi-Angle Implementation of Atmospheric Correction* (MAIAC), la banda que vamos a utilizar es la bande de  *Aerosol Optical Depth at 047 micron* esta banda es el espesor óptico de 047 micras. Esta banda ha sido utilizada para obtener el contaminante $PM_{10}$ el conlleva altos riesgos de la salud al tener una exposición prolongada.

El modelo fue entrenado y para cada día se obtuvieron los valores 

$$
PM^{10}_{ij} =  (\alpha + u_j) + (\beta + v_j)AOD_{ij}+ \beta_2 \text{temperature}_{ij} + \beta_3 \text{relative humidity}_{ij} + 
$$
$$ 
\beta_4 PBLH_{ij} + \beta_5 \sqrt{\text{precipitation}_{ij}} + \beta_6 \text{Street density}_{i} + \varepsilon
$$



## Colección de Imágenes

Para hacer uso de la colección de imágenes se hace usando la siguiente linea
```JavaScript
var AOD_MODIS_fix =  ee.ImageCollection("MODIS/006/MCD19A2_GRANULES");
```

La collección de imágenes contiene las imágenes disponibles del conjunto de datos, lo que normalmente son muchas imágenes disponibles, dentro de las cuales la mayoria no vamos a utilizar, para esto los objetos 'ee.ImageCollection' tienen métodos que nos ayudan a poder filtrar las imágenes dentro de la colección de imágenes. 

La siguiente linea de código nos filtra la colección sólo con las imágenes que se tomaron del '2005-01-01' al '2015-01-01'. 
```JavaScript
var AOD_MODIS_fix = ee.ImageCollection("MODIS/006/MCD19A2_GRANULES").filterDate('2005-01-01', '2015-01-01') 
```
La siguiente linea filtra las imágenes que contienen al punto  cercano a CentroGeo (-99.221411, 19.29183) 
```JavaScript
var AOD_MODIS_fix = ee.ImageCollection("MODIS/006/MCD19A2_GRANULES").filterBounds(ee.Geometry.Point(-99.221411, 19.29183))
```
Estas las podemos combinar para aplicar las distintas acciones de forma concatenadas, es decir podemos filtrar primero por fecha y después al resultado filtrar las imágenes que intersectan al punto dentro de la misma ejecución, como se muestra a continuación

```JavaScript
var AOD_MODIS_fix = ee.ImageCollection("MODIS/006/MCD19A2_GRANULES")
.filterDate('2005-01-01', '2015-01-01') 
.filterBounds(ee.Geometry.Point(-99.221411, 19.29183));
```

Este tipo de acciones las podemos implementar no solo con filtrados sino con distintas acciones disponibles en GEE. 

## Subir datos a GEE

En la pestaña 'Assets' dentro del editor de código de GEE (panel superior izquierdo) podemos añadir elementos para hacer uso de los mismos como se muestra en la imagen 

![Panel de Activos (assets) ](./GEE_assets.png). 

Los elementos que podemos añadir a GEE son imágenes (.tif, tiff), tablas en archivos shape (.shp, .shx, .dbf, .prj o .zip) o archivos csv (.csv). También podemos agregar colecciones de imágenes o folders que contengan este tipo de archivos. Los elementos que subimos a GEE se almacenan en proyectos en la nube de Google, esto hace que esten accesibles desde GEE cada vez que sea necesario. Al estar dentro de la nube de Google las politicas de acceso a los mismos son las de la Nube de Google y también son accesibles desde las API de Google cloud como [CLI](https://cloud.google.com/cli?hl=en). 


Para hacer uso de estos elementos denro del editor de código de GEE se pueden insertar haciendo uso de la interfaz gráfica como se muestra en la imagen @fig:ins_elem. Los elementos añadidos se insertaran al inicio de nuestro código como un preámbulo llamado `Imports` , se pueden editar los nombres para que los nombres de las variables donde se almacenan sean de acuerdo a las politicas del desarrollador. 


![insertar elementos ](./Insert_asset.png){#fig:ins_elem} 


Si se desea compartir los elementos que se encuentran en el preámbulo `Imports` se hace click en el boton azul a lado de `Imports` esto abrira una ventana la cual contendra todos los elementos que se encuentran dentro de el preambulo `Imports`.  Los elementos también pueden ser añadidos al código simplemente copiando y pegando. Se puede eliminar los elementos importados usando un boton de basura que se encuentra en el margen izquierdo cuando se pasa a lado del elemento insertado. 

![copiar elementos ](./Copiar_elemento.png){#fig:cop_elem} 

Para añadirlo de forma directa al código es a través de insertar el nombre del elemento y declararlo como lo que se desea en el caso de imagen se utiliza `ee.Image()` para una tabla se hace con `ee.FeatureCollection()` y si es un conjunto de imágenes con `ee.ImageCollection()`. El código a continuación se muestra como importamos la agregación de las vialidades extraidas de OpenStreet map ((OSM)[https://www.openstreetmap.org/]) y subida a GEE en el elemento "projects/gee-education/assets/Vialidades_AMM". 

```JavaScript
var image = ee.Image("projects/gee-education/assets/Vialidades_AMM");
```

## Explicación del Modelo 


Nuestro modelo es una modificación a un modelo utilizado dpor Just, esta modificación utiliza los datos meteorológicos para hacer las estimaciones y modifica 


## Usar formulas en imagenes




### Multiplicar elementos 

### Combinación lineal 

## Despliegue en mapa 









